<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Aws on Aiman Ismail</title><link>https://pokgak.xyz/tags/aws/</link><description>Recent content in Aws on Aiman Ismail</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Sun, 27 Oct 2024 14:37:00 +0800</lastBuildDate><atom:link href="https://pokgak.xyz/tags/aws/index.xml" rel="self" type="application/rss+xml"/><item><title>We got DDoSed</title><link>https://pokgak.xyz/articles/we-got-ddosed/</link><pubDate>Sun, 27 Oct 2024 14:37:00 +0800</pubDate><guid>https://pokgak.xyz/articles/we-got-ddosed/</guid><description>&lt;p>Recently at $work we&amp;rsquo;ve been hit by a series of DDoS attacks. In this post, I&amp;rsquo;m gonna describe the steps we&amp;rsquo;ve taken to protect our services from these attacks in the future and also what works and what don&amp;rsquo;t.&lt;/p>
&lt;h2 id="detection">
 &lt;a href="#detection" class="anchor">
 &lt;svg class="icon" aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16">
 &lt;path fill-rule="evenodd"
 d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
 &lt;/path>
 &lt;/svg>
 &lt;/a>
 Detection
&lt;/h2>
&lt;p>The first attack was around 10PM on a Sunday. I was at home at the time and was notified that our ingress-nginx pods were repeatedly crashing. I&amp;rsquo;ve seen this happen before and my initial thought was that our service was getting more customers this night so I added more nodes into our cluster and increased the replica count for the ingress-nginx pods. That did nothing. Our pods are still crashing and customers still cannot use our service.&lt;/p></description></item><item><title>The hidden cost of running your own observability stack</title><link>https://pokgak.xyz/articles/hidden-cost-lgtm/</link><pubDate>Mon, 24 Jun 2024 13:00:00 +0800</pubDate><guid>https://pokgak.xyz/articles/hidden-cost-lgtm/</guid><description>&lt;p>At my latest $job, I was tasked of setting up the LGTM stack (Loki, Grafana, Tempo, Mimir) for observability. Fast forward a few months, I noticed there&amp;rsquo;s a hidden aspect to running the stack that I was not expecting before and that is the network cost, specifically the network transfer cost for cross AZ traffic. At one point we were paying more than $100 per day just for the cross AZ network traffic.&lt;/p></description></item><item><title>Using Steampipe + DuckDB for VPC Flow Logs Analysis</title><link>https://pokgak.xyz/articles/steampipe-duckdb-flow-logs/</link><pubDate>Fri, 26 Jan 2024 20:00:00 +0800</pubDate><guid>https://pokgak.xyz/articles/steampipe-duckdb-flow-logs/</guid><description>&lt;p>As a so called &lt;a href="https://x.com/tevanraj/status/1747920076203057273?s=20">Tech Janitor&lt;/a>, I&amp;rsquo;ve been tasked to clean up one of our AWS accounts at work and that account have a bunch of EC2 instances that no one knows what they all do. So, I&amp;rsquo;ve decided to use one of AWS features, VPC Flow Logs, to first identify which EC2 instances are still being used and which are not.&lt;/p>
&lt;h2 id="setting-up-the-vpc-flow-logs-and-query-using-duckdb">
 &lt;a href="#setting-up-the-vpc-flow-logs-and-query-using-duckdb" class="anchor">
 &lt;svg class="icon" aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16">
 &lt;path fill-rule="evenodd"
 d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
 &lt;/path>
 &lt;/svg>
 &lt;/a>
 Setting up the VPC Flow Logs and query using DuckDB
&lt;/h2>
&lt;p>For our purpose, I&amp;rsquo;ve setup VPC flow logs to send all the traffic data to a S3 bucket that we&amp;rsquo;ll refer to as &lt;code>vpc-flow-logs-bucket&lt;/code> in this post. The flow logs are stored in a Parquet format for querying later using &lt;a href="https://duckdb.org">DuckDB&lt;/a>.&lt;/p></description></item></channel></rss>